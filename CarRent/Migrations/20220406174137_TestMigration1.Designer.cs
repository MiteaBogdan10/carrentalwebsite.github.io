// <auto-generated />
using System;
using CarRent.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRent.Migrations
{
    [DbContext(typeof(RentingContext))]
    [Migration("20220406174137_TestMigration1")]
    partial class TestMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarRent.Models.Cars", b =>
                {
                    b.Property<int>("CarsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarsID"), 1L, 1);

                    b.Property<string>("Name_Car")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("CarsID");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("CarRent.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"), 1L, 1);

                    b.Property<int>("ReservationID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.HasIndex("ReservationID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CarRent.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationID"), 1L, 1);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Pick_Up_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Return_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ReservationID");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("CarRent.Models.Reviews", b =>
                {
                    b.Property<int>("ReviewsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewsID"), 1L, 1);

                    b.Property<int>("CarsID")
                        .HasColumnType("int");

                    b.Property<string>("Comentariu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.HasKey("ReviewsID");

                    b.HasIndex("CarsID");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("CarRent.Models.Ride", b =>
                {
                    b.Property<int>("RideID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RideID"), 1L, 1);

                    b.Property<int>("CarsID")
                        .HasColumnType("int");

                    b.Property<int>("ReservationID")
                        .HasColumnType("int");

                    b.HasKey("RideID");

                    b.HasIndex("CarsID");

                    b.HasIndex("ReservationID");

                    b.ToTable("Rides");
                });

            modelBuilder.Entity("CarRent.Models.Payment", b =>
                {
                    b.HasOne("CarRent.Models.Reservation", "Reservation")
                        .WithMany("Payments")
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("CarRent.Models.Reviews", b =>
                {
                    b.HasOne("CarRent.Models.Cars", "Car")
                        .WithMany("Review")
                        .HasForeignKey("CarsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarRent.Models.Ride", b =>
                {
                    b.HasOne("CarRent.Models.Cars", "Car")
                        .WithMany("Rides")
                        .HasForeignKey("CarsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRent.Models.Reservation", "Reservation")
                        .WithMany("Rides")
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("CarRent.Models.Cars", b =>
                {
                    b.Navigation("Review");

                    b.Navigation("Rides");
                });

            modelBuilder.Entity("CarRent.Models.Reservation", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Rides");
                });
#pragma warning restore 612, 618
        }
    }
}
